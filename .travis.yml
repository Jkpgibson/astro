# Copyright (c) 2014-2016 Kartik Kumar, Dinamica Srl (me@kartikkumar.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    - secure: "Y+2OnSPSUkJmW7lns0gGnl3T9YIwLxqdiS7v7jwoUvRzs9DBYbImNuqQSt/Z88phC0PcEKsf0k8eXf+jEL7ufjuuJD2X5roZzxmztGqBHj4PAw7gR3Y3eiPais6QvaiO4/zi8KG0Vx8sQHT32mJa9VhMvLC4xaiVOo+fo/UulEHs2zuSAnrPdY2I5NkffzKrDrlAn0E1p4S5an4YXEtMH2A/YkxLEiKlLHE2ilz48ib5g1k1kTJFiSS6OJxrrvpMB9yvu+cIrtGlRAT//Z+B/T+/yr653OlPK3aK8LqI/cCo66vrObwAm1MrinpKdADOwkqncyNP0ktAZ29A6J6Jb1pfpwpv/YcwIRJ4KdpVE4g9o0jm0GUWSL2LlmEyfNGqm3vw20fMyqthiWU83/w+dvTZBV5tLsFs5rJSHUC61EVYdgJDUhHZLElRJZ564zuKRk6gN/YJEDOFm9coLMDi2kLPQrVwXFZPw26Mne8yuXnH/U9UNl9t7DFPoCQRWlw9X3OHh1jQlZ2mNU2cFKd/P3v4/KWAQIvuSKG+HPl9zcRDlWVXlDYF4hH2aCFb48eHfk5kqKmaxQGxgcmWrCXxqfuLeHLTQuWuWp4hwqD/NiT6qbV/4+40S9SLPKW3QY+nC47Zc5oIoDsujD5IesvIvb7jHnuk/3qqW+fWJVPYPvs="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  coverity_scan:
    project:
      name: "kartikkumar/astro"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on .."
    build_command: "make"
    branch_pattern: coverity_scan

addons:
  apt:
    packages:
      - texlive

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      pip install --user cpp-coveralls;
    fi

before_script::
  - ls -R $HOME/cmake
  - ls -R $HOME/doxygen



script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi