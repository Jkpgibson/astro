# Copyright (c) 2014-2016 Kartik Kumar, Dinamica Srl (me@kartikkumar.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "WuBr3+twBwxp3J2ScRYyQ8FpA25kvqjo3S/JNJ7XD58Ds8YjpalZcCUBfvdcJpkpKD1LU6nyPWNQK9r+PEAMZmM55k+hm13PqSi+AfVFgVW/BvA3K7iz7FXspQbMo+jWAzrEqmC/YF4kQKJzdPU0e4AAOuppNKnCD5U3SLBekbI5PHTzSnFDdLIs2oSguWiCl8IPs+yOlIu4c+7ltJJagmYTB0JHkqTLK88RkUpj29YuYiZJ+EKyRaXxVE9Hxi2vq9/5S7IuqjPenR6iWlVgMnsERI1Bykb5/at3OeV7GxIatezwTPBGAaUx7v5XWxXfhFG72hECfjlASNnmqfcrZZDOH2DSwEfokQc7pKkAewtBkJD7j1NUcVV6JIxG66Ikntx4JZXP04VYhlHLxijxZ+geapdm4o61Bno9pmwkMS5TsnW57HyaFz1hqwriFJlPfqtlBwcGUVhwOke9UJeuMmIt8CGJqJhGVJYBLR9QezPuG1Aw5/vGY0vgRlxehjsa3X4LHQ8wHu05H6Eggost8XIGfWMYmdAKnsPd+4aUOXbf2rzNIZFfRmRkRAlb3Ale5wmA9nnLuLhuwYdvVhZSBSjqZ2iqnzpw5Zvew9RYWFhnIxcy0/fI26XgMgor5274HPnA3hlCYACntwVZDKr+HC2uZHhlR93Ygd28Tpe98wM="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  apt:
    packages:
      - texlive
  coverity_scan:
    project:
      name: "kartikkumar/astro"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      pip install --user cpp-coveralls;
    fi

before_script::
  - ls -R $HOME/cmake
  - ls -R $HOME/doxygen

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DBUILD_TESTS_WITH_EIGEN=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
