# Copyright (c) 2014-2018 Kartik Kumar (me@kartikkumar.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "HEgMxZGzbn1hD3oVm9v7ZvKG48TJoyi5NOKFJ5QqzQeJCqhCy1YJ5iiTqlI6EqKcEHfseDNbqIHz3+JMzkg5QVXzN7WHm92lB+NklWoa+b8btvZMaiEJcfjIU1W2Gj52CGtl7nQW+2pQjVDz0QrvC+zO+RR6K6keOb3JzTHrABqyJT23q0nouosDNJcHfuallWHhuL2L16Qc7txW+aa0aNS2NuSLBtUGcZiphis4lBZEfKC29xVRrLdzxq27pavndVrzWpefhqMmwJy0kECXyC9/tYChY+pI7Bl4qHf4x1G42/BfDtifu37d9UW2G7pmCEyh30CFiiZXLPDYOglHDjC1HijY5gU19/UApoqxpWdIfNR1NhDU+6SdV8F2BNFrFxVC8oFqP+8avqhfL6rrAzCNVRK0/lNdUvyN5ffRMI18fzECtrpEp9OLW5Q11vSq2lW8lC+slcbU/U2GEq3LCdIEHHUBQsJGssOImEhK3R/KMXqCFigIMPGXJDHL/py9SSS6SVvl9OibEmRUw+lAbbnFR8nvgCgkrEZlqSIrtuPpYyWDhYeyW2D0EqU/sgpAKUaxgMUQ122lpCBlp8uguVhijjX9ZW7k1PDL5gKREtx8K9ahjd6WL1IRW+Nj1tOltUAK9HSeXT7kfWrppHzqGSsT6Q1FLFWldTN5U2nPV34="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  apt:
    packages:
      - texlive
      - graphviz
      - ghostscript
      - mscgen
  coverity_scan:
    project:
      name: "kartikkumar/astro"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      pip install --user cpp-coveralls;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
