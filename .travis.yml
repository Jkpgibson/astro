# Copyright (c) 2014-2018 Kartik Kumar (me@kartikkumar.com)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "gV49MCS1fEMqa53fReSjcxZOMLwhuauQJhFwJhqqi03m707yVqO97fZ+zxdXFdEeZ3FJu2ytPtW0g7pxijcUcd7Ema6YpatW5dIXDj6zf5OrJ5AfZYFJBogLfqS5AQSsYSz9Rb46UincDZaMYcWMWV+JnrzZnN/MSS2gJyx496vSXIoiPu5bxNDIOndGzGoBQ2RSDJ14ZM+wuEgOWr4v34cDpl9uBp0MRslZheHIWwEcFGcCVs00j2K2/wwpfn1S8i+0gMqXwfr5kiRFG2RqjjFXkx+j1JWzT4I4UbQH5CXXDJxAPK2MVwPjltEvGXSBYDA4OLpSe0EvlK6Tofro2KI/zaZGmnr8G24bJFvbB9V1vsup1YLy87/TBRWtSsxw7w8b6GnoM54nMDdyBobdrpc8NLiuClsqpPBlP5AqnYdh+GHJCSuN2p9/cgfSjnW08E4jdQPhjpwmttjAwiCcoJ+bJanxGcHmcEdeOFBZLPEm8SN4P9NS+9YgLV5jMZ8bcag5ef0g79k154heFuQ0g8UUtjjSbY6J4b+d4eTN/BIARWm0wAUE5YOQ6Qsvq8xjsWdGygJdYDcb522mMvmpPRj9ReA81pH6GwduWwQhX6ioPKxS1T7TlXNO7qIdKfSD1zjkEThiN5qScn+G9xPwGCzDkBt2murD/m7yQrYM72Q="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  apt:
    packages:
      - texlive
      - graphviz
      - ghostscript
      - mscgen
  coverity_scan:
    project:
      name: "kartikkumar/astro"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      pip install --user cpp-coveralls;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
